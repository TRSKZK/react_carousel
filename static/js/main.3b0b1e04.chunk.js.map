{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scroll","maxWidth","scrollLeft","step","setState","prevState","scrollRight","this","props","itemWidth","frameSize","animationDuration","containerWidth","pixelsToScroll","prevButtonDisabled","Math","abs","nextButtonDisabled","className","style","transform","transition","images","map","image","width","src","alt","disabled","onClick","type","React","Component","App","length","ReactDOM","render","document","getElementById"],"mappings":"uPAgBMA,E,4MACJC,MAAQ,CACNC,OAAQ,EACRC,SAAU,M,EAGZC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GACb,MAAO,CACLL,OAAQK,EAAUL,OAASG,O,EAKjCG,YAAc,SAACH,GACb,EAAKC,UAAS,SAACC,GACb,MAAO,CACLL,OAAQK,EAAUL,OAASG,O,4CAKjC,WAAU,IAAD,OACP,EAKII,KAAKC,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,UACAP,EAHF,EAGEA,KACAQ,EAJF,EAIEA,kBAEF,EAA6BJ,KAAKR,MAA1BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SACVW,EAAiBH,EAAYC,EAC7BG,EAAiBV,EAAOM,EACxBK,EAAqBC,KAAKC,IAAIhB,GAAUa,EAAiB,EACzDI,EAAqBd,EAAO,EAC9BY,KAAKC,IAAIhB,EAASa,GAAkBZ,EAAWY,EAC/CE,KAAKC,IAAIhB,EAASa,GAAkBZ,EAExC,OACE,sBAAKiB,UAAU,WAAf,UACE,qBACEC,MAAO,CAAElB,SAAS,GAAD,OAAKW,EAAL,OACjBM,UAAU,YAFZ,SAIE,oBACEC,MAAO,CACLC,UAAU,cAAD,OAAgBpB,EAAhB,OACTqB,WAAW,aAAD,OAAeV,EAAf,OAEZO,UAAU,iBALZ,SAQIX,KAAKC,MAAMc,OAAOC,KAAI,SAACC,GAAD,OACpB,6BACE,qBACEL,MAAO,CAAEM,MAAM,GAAD,OAAKhB,IACnBiB,IAAKF,EACLG,IAAI,WAJCH,UAWjB,qBAAKN,UAAU,QAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,wBACEU,SAAUd,EACVe,QAAS,kBAAM,EAAKvB,YAAYO,IAChCK,UAAU,8CACVY,KAAK,SAJP,kBASA,wBACEF,SAAUX,EACVY,QAAS,kBAAM,EAAK3B,WAAWW,IAC/BK,UAAU,8CACVY,KAAK,SAJP,8B,GA1EWC,IAAMC,WAyFdlC,ICjGTmC,E,4MACJlC,MAAQ,CACNuB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWf,KAAKR,MAAhBuB,OAER,OACE,sBAAKJ,UAAU,MAAf,UAEE,gDAAmBI,EAAOY,OAA1B,aAEA,cAAC,EAAD,CACEZ,OAAQA,EACRnB,KAAM,EACNO,UAAW,EACXD,UAAW,IACXE,kBAAmB,a,GA7BXoB,IAAMC,WAoCTC,ICzCfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3b0b1e04.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n}\n\ninterface State {\n  scroll: number,\n  maxWidth: number,\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    scroll: 0,\n    maxWidth: 1300,\n  };\n\n  scrollLeft = (step:number) => {\n    this.setState((prevState) => {\n      return {\n        scroll: prevState.scroll - step,\n      };\n    });\n  };\n\n  scrollRight = (step:number) => {\n    this.setState((prevState) => {\n      return {\n        scroll: prevState.scroll + step,\n      };\n    });\n  };\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.props;\n    const { scroll, maxWidth } = this.state;\n    const containerWidth = itemWidth * frameSize;\n    const pixelsToScroll = step * itemWidth;\n    const prevButtonDisabled = Math.abs(scroll) - pixelsToScroll < 0;\n    const nextButtonDisabled = step < 3\n      ? Math.abs(scroll - pixelsToScroll) > maxWidth - pixelsToScroll\n      : Math.abs(scroll - pixelsToScroll) > maxWidth;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          style={{ maxWidth: `${containerWidth}px` }}\n          className=\"container\"\n        >\n          <ul\n            style={{\n              transform: `translateX(${scroll}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n            className=\"Carousel__list\"\n          >\n            {\n              this.props.images.map((image:string) => (\n                <li key={image}>\n                  <img\n                    style={{ width: `${itemWidth}` }}\n                    src={image}\n                    alt=\"smile\"\n                  />\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"wrapp\">\n          <div className=\"Carousel__buttons--container\">\n            <button\n              disabled={prevButtonDisabled}\n              onClick={() => this.scrollRight(pixelsToScroll)}\n              className=\"button Carousel__buttons--container--button\"\n              type=\"button\"\n            >\n              Prev\n            </button>\n\n            <button\n              disabled={nextButtonDisabled}\n              onClick={() => this.scrollLeft(pixelsToScroll)}\n              className=\"button Carousel__buttons--container--button\"\n              type=\"button\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}